# Receive from another box on port 9999 and show
gst-launch-1.0 udpsrc port=9999 ! application/x-rtp,encoding-name=JPEG,payload=26 ! rtpjpegdepay ! jpegdec ! autovideosink

# Send with position change, resizing, ans pixel aspect ratio
gst-launch-1.0 -v ximagesrc startx=960 starty=600 use-damage=false xname=/usr/lib/torcs/torcs-bin ! videoconvert ! videoscale ! video/x-raw,format=I420,width=960,height=800,pixel-aspect-ratio=4/3,framerate=25/1 ! jpegenc ! rtpjpegpay ! udpsink host=192.168.2.20 port=9999


# Receive from another bos mpeg4 stream


# Send mpeg4 encoded stream (use bitrate to control quality)
gst-launch-1.0 -v ximagesrc use-damage=false xname=/usr/lib/torcs/torcs-bin ! videoconvert ! videoscale ! video/x-raw,width=1920,height=1080 ! avenc_mpeg4 bitrate=5000000 ! rtpmp4vpay config-interval=3 ! udpsink host=192.168.2.20 port=9999

# GStreamer
http://www.einarsundgren.se/gstreamer-basic-real-time-streaming-tutorial/



# Forward OSC data from SuperCollider
// http://doc.sccode.org/Classes/OSCdef.html

// initialise forwarding function
var addr = NetAddr.new("IPADDRESS", 3333);
OSCdef(\tidalplay2, {
    arg msg;
    addr.sendMsg("/play2", *msg);
}, '/play2', n);

// clear forwarding function
OSCdef(\tidalplay2).clear;
// unregister OSCdef
OSCdef(\tidalplay2).free;

// list all OSCdefs
OSCdef.all.do(_.postln)

# Sending silence from tidal
p "100" $ fast 16 $ sound "u1"

# Test forwarding is working
sudo nc -ul 3333



# UFW open
sudo ufw allow proto udp to 0.0.0.0/0 port 9999
sudo ufw allow proto udp to 0.0.0.0/0 port 3333

# UFW close
sudo ufw delete allow proto udp to 0.0.0.0/0 port 9999
sudo ufw delete allow proto udp to 0.0.0.0/0 port 3333


