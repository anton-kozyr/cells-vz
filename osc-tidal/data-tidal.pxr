@ /data-tidal root:data {
  #%praxis.version 4.1.1
  @ ./osc-receive core:custom {
    #%graph.x 90
    #%graph.y 242
    #%graph.comment In SuperCollider run the following:\n\nvar addr = NetAddr.new(\"localhost\", 3333);\nOSCdef(\\tidalplay2, \{\n    arg msg;\n    addr.sendMsg(\"/play2\", *msg);\n\}, '/play2', n);
    .code "import de.sciss.net.*;
import java.io.IOException;
import java.util.concurrent.ConcurrentLinkedQueue;


    @P(1) @Type.Integer(def = 3333) @Config.Port(false) @OnChange(\"resetServer\")
    int port;
    
    @Out(1) Output out;

    @Inject Ref<OSCServer> osc;
    @Inject Ref<Queue<OSCMessage>> queue;

    @Override 
    public void init() \{
        queue.init(ConcurrentLinkedQueue::new);
        initServer();
    \}

    @Override
    public void update() \{
        queue.ifPresent(q -> \{
            OSCMessage msg;
            while ((msg = q.poll()) != null) \{
                Value\[\] vals = new Value\[msg.getArgCount() + 1\];
                vals\[0\] = PString.valueOf(msg.getName());
                for (int i = 0; i < msg.getArgCount(); i++) \{
                    Object arg = msg.getArg(i);
                    if (arg instanceof Number) \{
                        vals\[i + 1\] = PNumber.valueOf(((Number) arg).doubleValue());
                    \} else \{
                        vals\[i + 1\] = PString.valueOf(arg.toString());
                    \}
                \}
                out.send(PArray.valueOf(vals));
            \}
        \});

    \}
    
    void initServer() \{
        osc.init(() -> \{
            try \{
                OSCServer s = OSCServer.newUsing(OSCServer.UDP, port);
                s.start();
                return s;
            \} catch (IOException ex) \{
                log(ERROR, ex);
                return null;
            \}
        \})
        .bind(OSCServer::addOSCListener, OSCServer::removeOSCListener,
                (msg, sa, l) -> queue.apply(q -> q.add(msg)))
        .onDispose(s -> s.dispose());
    \}
    
    void resetServer() \{
        osc.clear();
        initServer();
    \}


"
  }
  @ ./osc-filter core:custom {
    #%graph.x 395
    #%graph.y 242
    .code "

    @P(1) @ReadOnly Value address;
    @P(2) @ReadOnly Value arg1;
    @P(3) @ReadOnly Value arg2;
    @P(4) @ReadOnly Value arg3;
    @P(5) @ReadOnly Value arg4;
    @P(6) @ReadOnly Value arg5;
    @P(7) @ReadOnly Value arg6;
    @P(8) @ReadOnly Value arg7;
    @P(9) @ReadOnly Value arg8;
    @P(10) @ReadOnly Value arg9;
    
    @P(20) @Type.String String key;
    @P(21) @Type.String String value;
    
    @Out(1) Output out;
    

    @In(1) void in(PArray in) \{
        address = arg1 = arg2 = arg3 = arg4 = arg5 = arg6 = arg7 = arg8 = arg9 = PString.EMPTY;
        switch (in.getSize()) \{
            case 10:
                arg9 = in.get(9);
            case 9:
                arg8 = in.get(8);
            case 8:
                arg7 = in.get(7);
            case 7:
                arg6 = in.get(6);
            case 6:
                arg5 = in.get(5);
            case 5:
                arg4 = in.get(4);
            case 4:
                arg3 = in.get(3);
            case 3:
                arg2 = in.get(2);
            case 2:
                arg1 = in.get(1);
            case 1:
                address = in.get(0);
        \}
        StringBuilder sb = new StringBuilder(\"\[ \");
        sb.append(in.stream().map(v -> v.toString()).collect(Collectors.joining(\", \")));
        sb.append(\" \]\");
        log(ERROR, sb.toString());
        matchAndSend(in);
    \}

    void matchAndSend(PArray in) \{
        if(null == key || null == value) \{
            log(WARNING, \"Key and Value must be specified\");
            return;
        \}
        for(int i=2; i<in.getSize()-1; ++i) \{
            String entry = in.get(i).toString();
            if (key.equals(entry)) \{
                String entry2 = in.get(i+1).toString();
                if (value.equals(entry2)) \{
                    out.send();
                \}
            \}
        \}
    \}
"
  }
  ~ ./osc-receive!out ./osc-filter!in
}
