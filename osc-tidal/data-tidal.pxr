@ /data-tidal root:data {
  #%praxis.version 4.1.1
  #%graph.comment Check tap-fft/video-out it doesn't work, but there is an example of OSC
  @ ./osc-receive core:custom {
    #%graph.x 100
    #%graph.y 242
    #%graph.comment In SuperCollider run the following:\n\nvar addr = NetAddr.new(\"10.0.0.1\", 3333);\nOSCdef(\\tidalplay2, \{\n    arg msg;\n    addr.sendMsg(\"/play2\", *msg);\n\}, '/play2', n);
    .code "import de.sciss.net.*;
import java.io.IOException;
import java.util.concurrent.ConcurrentLinkedQueue;


    @P(1) @Type.Integer(def = 3333) @Config.Port(false) @OnChange(\"resetServer\")
    int port;
    
    @Out(1) Output out;

    @Inject Ref<OSCServer> osc;
    @Inject Ref<Queue<OSCMessage>> queue;

    @Override 
    public void init() \{
        queue.init(ConcurrentLinkedQueue::new);
        initServer();
    \}

    @Override
    public void update() \{
        queue.ifPresent(q -> \{
            OSCMessage msg;
            while ((msg = q.poll()) != null) \{
                Value\[\] vals = new Value\[msg.getArgCount() + 1\];
                vals\[0\] = PString.valueOf(msg.getName());
                for (int i = 0; i < msg.getArgCount(); i++) \{
                    Object arg = msg.getArg(i);
                    if (arg instanceof Number) \{
                        vals\[i + 1\] = PNumber.valueOf(((Number) arg).doubleValue());
                    \} else \{
                        vals\[i + 1\] = PString.valueOf(arg.toString());
                    \}
                \}
                out.send(PArray.valueOf(vals));
            \}
        \});

    \}
    
    void initServer() \{
        osc.init(() -> \{
            try \{
                OSCServer s = OSCServer.newUsing(OSCServer.UDP, port);
                s.start();
                return s;
            \} catch (IOException ex) \{
                log(ERROR, ex);
                return null;
            \}
        \})
        .bind(OSCServer::addOSCListener, OSCServer::removeOSCListener,
                (msg, sa, l) -> queue.apply(q -> q.add(msg)))
        .onDispose(s -> s.dispose());
    \}
    
    void resetServer() \{
        osc.clear();
        initServer();
    \}


"
  }
  @ ./taptempo core:custom {
    #%graph.x 653
    #%graph.y 223
    #%graph.colors Orange
    #%graph.comment Tap tempo component\ntrig : trigger on the beat\nunit : provides a unit interval\npare with tapdiv to slow down unit over \nmultiple beats, ie 4 beats
    .code "

    @P(1) @Type.Number(min = 0.001, max = 60, def = 1)
    double period;

    @P(2) @Type.Number @ReadOnly
    Property time;

    @P(3) @Type.Boolean() boolean playing = true;

    @Out(1) Output trig;
    @Out(2) Output unit;

    @Inject Property chrono;

    final int ARRAY_SIZE = 5;
    double\[\] timeArray = new double\[ARRAY_SIZE\];

    @Override
    public void update() \{
        if (!time.isAnimating() && playing) \{
            time.set(0).to(1).in(period);
            trig.send(1.0);
        \}
        unit.send(d(time));
    \}

    @T(0) void tap()\{
        if(d(chrono) < 12)\{
            for(int i = ARRAY_SIZE-1; i > 0; i--)\{
                timeArray\[i\] = timeArray\[i-1\];
            \}
            timeArray\[0\] = d(chrono);
            double _sum = 0;
            for(int i = 0; i < ARRAY_SIZE; i++)\{
                _sum += timeArray\[i\];
            \}
            period = (_sum/ARRAY_SIZE);
            time.animator().in(period);
        \}
        chrono.set(0).to(1000).in(1000);
    \}
    
    @T(1) void trigger()\{
        time.set(0).to(1).in(period);
        trig.send(1.0);
    \}
"
    .period 0.111704117
    .playing true
  }
  @ ./osc-filter1 core:custom {
    #%graph.x 341
    #%graph.y 311
    .code "

    @Out(1) Output oscSignal;
    
    @P(1) boolean enabled;

    @In(1) void in(PArray in) \{
        if(enabled && \"placeholders\".equals(in.get(11).toString())) \{
            StringBuilder sb = new StringBuilder(\"\[ \");
            sb.append(in.stream().map(v -> v.toString()).collect(Collectors.joining(\", \")));
            sb.append(\" \]\");
//            log(ERROR, sb.toString());
            oscSignal.send();
        \}
    \}

"
  }
  @ ./bw-osc core:routing:send {
    #%graph.x 591
    #%graph.y 448
  }
  ~ ./osc-receive!out ./taptempo!tap
  ~ ./osc-filter1!osc-signal ./bw-osc!in
  ~ ./osc-receive!out ./osc-filter1!in
}
